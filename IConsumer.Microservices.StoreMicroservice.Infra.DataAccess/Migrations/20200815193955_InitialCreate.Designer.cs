// <auto-generated />
using System;
using IConsumer.Microservices.StoreMicroservice.Infra.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IConsumer.Microservices.StoreMicroservice.Infra.DataAccess.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20200815193955_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Store")
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.StoreTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreTable");
                });

            modelBuilder.Entity("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.Store", b =>
                {
                    b.OwnsOne("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("StoreId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Suburb")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Town")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Zip")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StoreId");

                            b1.ToTable("Store");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");
                        });
                });

            modelBuilder.Entity("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.StoreTable", b =>
                {
                    b.HasOne("IConsumer.Microservices.StoreMicroservice.Domain.AggregatesModel.StoreAggregate.Store", null)
                        .WithMany("StoreTables")
                        .HasForeignKey("StoreId");
                });
#pragma warning restore 612, 618
        }
    }
}
